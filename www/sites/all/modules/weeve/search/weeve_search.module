<?php

function weeve_search_apachesolr_update_index(&$document, $node) {
  if (count($node->field_project_image)) {
    //add the cck image field called field_project_image as a separate field to the SOLR search index schema
    $document->addField('sm_field_project_image', $node->field_project_image[0]['filepath']);
  }
}

function weeve_search_apachesolr_modify_query(&$query, &$params, $caller) {
  $params['fl'] .= ',sm_field_project_image';
}

function weeve_search_apachesolr_cck_fields_alter(&$mappings) {
  $mappings['per-field']['field_project_image'] = array(
      'callback' => 'weeve_search_apachesolr_callback',
      'index_type' => 'string'
  );
}

/**
 * A function that gets called during indexing.
 * @node The current node being indexed
 * @fieldname The current field being indexed
 *
 * @return an array of arrays. Each inner array is a value, and must be
 * keyed 'value' => $value
 */
function weeve_search_apachesolr_callback($node, $fieldname) {
  $fields = array();
  foreach ($node->$fieldname as $field) {
    // In this case we are indexing the filemime type. While this technically
    // makes it possible that we could search for nodes based on the mime type
    // of their file fields, the real purpose is to have facet blocks during
    // searching.
    $fields[] = array('value' => $field['filemime']);
  }
  return $fields;
}